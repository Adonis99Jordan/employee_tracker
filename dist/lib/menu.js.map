{"version":3,"file":"menu.js","sourceRoot":"","sources":["../../src/lib/menu.ts"],"names":[],"mappings":"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","sourcesContent":["import inquirer from 'inquirer';\r\nimport 'console.table';\r\n\r\nimport {viewAllDepartments, viewAllRoles, viewAllEmployees, addDepartment, addRole, addEmployee, updateEmployeeRole } from './query.js';\r\n\r\n\r\nexport async function showMainMenu() {\r\n    const { action } = await inquirer.prompt({\r\n        name: 'action',\r\n        type: 'list',\r\n        message: 'What would you like to do?',\r\n        choices: [\r\n            'View all departments',\r\n            'View all roles',\r\n            'View all employees',\r\n            'Add a department',\r\n            'Add a role',\r\n            'Add an employee',\r\n            'Update an employee role',\r\n        ],\r\n    });\r\n    \r\n    switch (action) {\r\n        case 'View all departments':\r\n            console.table(await viewAllDepartments());\r\n            break;\r\n        case 'View all roles':\r\n            console.table(await viewAllRoles());\r\n            break;\r\n        case 'View all employees':\r\n            console.table(await viewAllEmployees());\r\n            break;\r\n        case 'Add a department':\r\n            const {departmentName} = await inquirer.prompt({\r\n                name: 'departmentName',\r\n                type: 'input',\r\n                message: 'Enter the name of the department:',\r\n            });\r\n            await addDepartment(departmentName);\r\n            console.log(`Added department: ${departmentName}`);\r\n            break;\r\n        case 'Add a role':\r\n            const departments = await viewAllDepartments();\r\n            const { roleTitle, roleSalary, roleDepartmentId} = await inquirer.prompt([\r\n                {name: 'roleTitle', type: 'input', message: 'Enter the title of the role:'},\r\n                {name: 'roleSalary', type: 'input', message: 'Enter the salary of the role:'},\r\n                {\r\n                    name: 'roleDepartmentId',\r\n                    type: 'list',\r\n                    message: 'Select the department for the role:',\r\n                    choices: departments.map(department => ({name: department.name, value: department.id})),\r\n                },\r\n            ]);\r\n            await addRole(roleTitle, parseFloat(roleSalary), roleDepartmentId);\r\n            console.log(`Added role: ${roleTitle}`);\r\n            break;\r\n        case 'Added an employee':\r\n            const roles = await viewAllRoles();\r\n            const employees = await viewAllEmployees();\r\n            const {first_name, last_name, role_id, manager_id} = await inquirer.prompt([\r\n                {name: 'first_name', type: 'input', message: 'Enter the first name of the employee:'},\r\n                {name: 'last_name', type: 'input', message: 'Enter the last name of the employee:'},\r\n                {\r\n                    name: 'role_id',\r\n                    type: 'list',\r\n                    message: 'Select the role for the employee:',\r\n                    choices: roles.map(role => ({name: role.title, value: role.id})),\r\n                },\r\n                {\r\n                    name: 'manager_id',\r\n                    type: 'list',\r\n                    message: 'Select the manager for the employee (if any):',\r\n                    choices: [{name: 'None', value: null}]. concat(employees.map(employee => ({name: `${employee.first_name} ${employee.last_name}`, value: employee.id}))),\r\n                },\r\n            ]);\r\n            await addEmployee(first_name, last_name, role_id, manager_id);\r\n            console.log(`Added employee: ${first_name} ${last_name}`);\r\n            break;\r\n        case 'Update an employee role':\r\n            const allEmployees = await viewAllEmployees();\r\n            const allRoles = await viewAllRoles();\r\n            const {employee_id, new_role_id} = await inquirer.prompt([\r\n                {\r\n                    name: 'employee_id',\r\n                    type: 'list',\r\n                    message: 'Select the employee to update:',\r\n                    choices: allEmployees.map(employee => ({name: `${employee.first_name} ${employee.last_name}`, value: employee.id})),\r\n                },\r\n                {\r\n                    name: 'new_role_id',\r\n                    type: 'list',\r\n                    message: 'Select the new role for the employee:',\r\n                    choices: allRoles.map(role => ({name: role.title, value: role.id})),\r\n                },\r\n            ]);\r\n            await updateEmployeeRole(employee_id, new_role_id);\r\n            console.log(`Update employee's role`);\r\n            break;\r\n        }\r\n\r\n        showMainMenu();\r\n}\r\n"]}