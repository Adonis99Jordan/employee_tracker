{"version":3,"file":"query.js","sourceRoot":"","sources":["../../src/lib/query.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAE7C,MAAM,CAAC,KAAK,UAAU,kBAAkB;IACpC,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;IACzD,OAAO,CAAC,MAAM,MAAM,CAAC,CAAC,IAAI,CAAC;AAC/B,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,YAAY;IAC9B,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC;;;;;KAKjC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC,IAAI,CAAC;AACvB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB;IAClC,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC;;;;;;;;KAQjC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC,IAAI,CAAC;AACvB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,IAAY;IAC5C,MAAM,MAAM,CAAC,KAAK,CAAC,4CAA4C,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7E,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,OAAO,CAAC,KAAa,EAAE,MAAc,EAAE,aAAqB;IAC9E,MAAM,MAAM,CAAC,KAAK,CAAC,sEAAsE,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC;AAC/H,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,WAAW,CAAC,UAAkB,EAAE,SAAiB,EAAE,OAAe,EAAE,UAAyB;IAC/G,MAAM,MAAM,CAAC,KAAK,CAAC,4FAA4F,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;AACnK,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,kBAAkB,CAAC,WAAmB,EAAE,OAAe;IACzE,MAAM,MAAM,CAAC,KAAK,CAAC,iDAAiD,EAAE,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;AAClG,CAAC","sourcesContent":["import client from '../config/connection.js';\r\n\r\nexport async function viewAllDepartments() {\r\n    const result = client.query('SELECT * FROM departments');\r\n    return (await result).rows;\r\n}\r\n\r\nexport async function viewAllRoles() {\r\n    const result = await client.query(`\r\n    SELECT \r\n    roles.id, roles.title, roles.salary, departments.name AS department\r\n    FROM roles\r\n    JOIN departments ON roles.department_id = departments.id\r\n    `);\r\n    return result.rows;\r\n}\r\n\r\nexport async function viewAllEmployees() {\r\n    const result = await client.query(`\r\n    SELECT\r\n    employees.id, employees.first_name, employees.last_name, roles.title, departments.name AS department, roles.salary, CONCAT(managers.first_name, ' ', \r\n    managers.last_name) AS manager\r\n    FROM employees\r\n    JOIN roles ON employees.role_id = roles.id\r\n    JOIN departments ON roles.department_id = departments.id\r\n    LEFT JOIN employees AS managers ON employees.manager_id = managers.id\r\n    `);\r\n    return result.rows;\r\n}\r\n\r\nexport async function addDepartment(name: string) {\r\n    await client.query('INSERT INTO departments (name) VALUES ($1)', [name]);\r\n}\r\n\r\nexport async function addRole(title: string, salary: number, department_id: number) {\r\n    await client.query('INSERT INTO roles (title, salary, department_id) VALUES ($1, $2, $3)', [title, salary, department_id]);\r\n}\r\n\r\nexport async function addEmployee(first_name: string, last_name: string, role_id: number, manager_id: number | null) {\r\n    await client.query('INSERT INTO employees (first_name, last_name, role_id, manager_id) VALUES ($1, $2, $3, $4)', [first_name, last_name, role_id, manager_id]);\r\n}\r\n\r\nexport async function updateEmployeeRole(employee_id: number, role_id: number) {\r\n    await client.query('UPDATE employees SET role_id = $1 WHERE id = $2', [role_id, employee_id]);\r\n}"]}